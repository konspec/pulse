[project]
name = "pulse"
version = "0.1.0"
description = "A BI website powered by django."
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "django>=5.2.4",
    "django-environ>=0.12.0",
]


# ============================================================================
# Ruff Configuration
# ============================================================================

[tool.ruff]
target-version = "py312"
line-length = 120
src = ["src"]
exclude = [
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    ".uv-cache",
    ".venv",
    "__pycache__",
    "build",
    "dist",
    "migrations",
    "venv",
]

[tool.ruff.lint]
select = [
    # Core linting
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # Pyflakes

    # Import and naming
    "I",      # isort
    "N",      # pep8-naming
    "TID",    # flake8-tidy-imports
    "ICN",    # flake8-import-conventions

    # Documentation
    "D",      # pydocstyle

    # Type annotations
    "ANN",    # flake8-annotations
    "FA",     # flake8-future-annotations
    "TCH",    # flake8-type-checking

    # Code quality and bugs
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "SIM",    # flake8-simplify
    "PIE",    # flake8-pie
    "PERF",   # Perflint
    "FURB",   # refurb
    "RUF",    # Ruff-specific rules

    # Security and safety
    "S",      # flake8-bandit
    "BLE",    # flake8-blind-except

    # Best practices
    "UP",     # pyupgrade
    "A",      # flake8-builtins
    "PTH",    # flake8-use-pathlib
    "SLF",    # flake8-self
    "SLOT",   # flake8-slots

    # Code style
    "COM",    # flake8-commas
    "Q",      # flake8-quotes
    "ISC",    # flake8-implicit-str-concat

    # Error handling
    "EM",     # flake8-errmsg
    "TRY",    # tryceratops
    "RSE",    # flake8-raise
    "RET",    # flake8-return

    # Testing
    "PT",     # flake8-pytest-style

    # Cleanup and maintenance
    "ERA",    # eradicate
    "T10",    # flake8-debugger
    "T20",    # flake8-print
    "TD",     # flake8-todos
    "FIX",    # flake8-fixme
    "ARG",    # flake8-unused-arguments

    # Format and structure
    "G",      # flake8-logging-format
    "LOG",    # flake8-logging
    "DTZ",    # flake8-datetimez
    "PGH",    # pygrep-hooks
    "PL",     # Pylint

    # Other rules
    "YTT",    # flake8-2020
    "FBT",    # flake8-boolean-trap
    "INP",    # flake8-no-pep420
    "INT",    # flake8-gettext
    "PD",     # pandas-vet
]

# Rules to ignore for practicality
ignore = [
    # Docstring flexibility
    "D100",    # undocumented-public-module
    "D104",    # undocumented-public-package
    "D107",    # undocumented-public-init
    "D203",    # incorrect-blank-line-before-class
    "D213",    # multi-line-summary-second-line

    # Type annotation flexibility
    "ANN204",  # missing-return-type-special-method

    # Formatter conflicts
    "COM812",  # missing-trailing-comma
    "ISC001",  # single-line-implicit-string-concatenation

    # Practical exceptions
    "S101",    # assert
    "PLR0913", # too-many-arguments
    "PLR2004", # magic-value-comparison
    "TD002",   # missing-todo-author
    "TD003",   # missing-todo-link
    "FIX002",  # line-contains-todo
    "ANN401",  # any-type
    "TRY003",  # raise-vanilla-args
    "EM101",   # raw-string-in-exception
    "EM102",   # f-string-in-exception
    "G004",    # logging-f-string
    "TRY004",  # type-check-without-type-error
    "PLC0415", # import should be at top level
    "RUF012",  # Empty lists
]

# Rules that should be auto-fixed
unfixable = [
    "F841",   # unused-variable
    "ERA001", # commented-out-code
]

[tool.ruff.lint.pycodestyle]
max-doc-length = 120

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
combine-as-imports = true
force-wrap-aliases = true
split-on-trailing-comma = true
known-first-party = ["odyn"]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "double"
multiline-quotes = "double"

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true
ignore-fully-untyped = true

[tool.ruff.lint.pylint]
max-args = 6
max-branches = 12
max-returns = 6
max-statements = 50

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = 120

# ============================================================================
# Commitizen Configuration
# ============================================================================

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$version"
version_scheme = "pep440"
version_provider = "uv"
update_changelog_on_bump = true

[dependency-groups]
dev = [
    "pre-commit>=4.2.0",
]
